/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as WorkflowsIndexRouteImport } from './routes/workflows/index'
import { Route as ProtoEditorIndexRouteImport } from './routes/proto-editor/index'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const WorkflowsIndexRoute = WorkflowsIndexRouteImport.update({
  id: '/workflows/',
  path: '/workflows/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProtoEditorIndexRoute = ProtoEditorIndexRouteImport.update({
  id: '/proto-editor/',
  path: '/proto-editor/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/proto-editor': typeof ProtoEditorIndexRoute
  '/workflows': typeof WorkflowsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/proto-editor': typeof ProtoEditorIndexRoute
  '/workflows': typeof WorkflowsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/proto-editor/': typeof ProtoEditorIndexRoute
  '/workflows/': typeof WorkflowsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/proto-editor' | '/workflows'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/proto-editor' | '/workflows'
  id: '__root__' | '/' | '/proto-editor/' | '/workflows/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ProtoEditorIndexRoute: typeof ProtoEditorIndexRoute
  WorkflowsIndexRoute: typeof WorkflowsIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/workflows/': {
      id: '/workflows/'
      path: '/workflows'
      fullPath: '/workflows'
      preLoaderRoute: typeof WorkflowsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/proto-editor/': {
      id: '/proto-editor/'
      path: '/proto-editor'
      fullPath: '/proto-editor'
      preLoaderRoute: typeof ProtoEditorIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ProtoEditorIndexRoute: ProtoEditorIndexRoute,
  WorkflowsIndexRoute: WorkflowsIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

import type { getRouter } from './router.tsx'
import type { createStart } from '@tanstack/react-start'
declare module '@tanstack/react-start' {
  interface Register {
    ssr: true
    router: Awaited<ReturnType<typeof getRouter>>
  }
}
