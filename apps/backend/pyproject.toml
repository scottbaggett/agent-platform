[project]
name = "agent-backend"
version = "0.1.0"
description = "Prototype LangGraph Execution Server"
requires-python = ">=3.9"

[tool.ruff]
# Line length to match observed codebase style (~100 chars)
line-length = 100
target-version = "py39"

# Exclude common directories
exclude = [
    ".git",
    ".venv",
    "venv",
    "__pycache__",
    "*.egg-info",
]

[tool.ruff.lint]
# Enable recommended rules plus extras
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "N",   # pep8-naming
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
    "A",   # flake8-builtins
    "C4",  # flake8-comprehensions
    "DTZ", # flake8-datetimez
    "T10", # flake8-debugger
    "ISC", # flake8-implicit-str-concat
    "ICN", # flake8-import-conventions
    "PIE", # flake8-pie
    "PT",  # flake8-pytest-style
    "Q",   # flake8-quotes
    "RSE", # flake8-raise
    "RET", # flake8-return
    "SIM", # flake8-simplify
    "TID", # flake8-tidy-imports
    "ARG", # flake8-unused-arguments
    "PTH", # flake8-use-pathlib
    "PL",  # pylint
    "RUF", # ruff-specific rules
]

# Ignore specific rules that might be too strict for this codebase
ignore = [
    "PLR0913", # Too many arguments
    "PLR2004", # Magic value used in comparison
    "ARG001",  # Unused function argument (common in FastAPI)
    "ARG002",  # Unused method argument
    "PTH123",  # pathlib vs os.path (allow both)
]

[tool.ruff.lint.per-file-ignores]
# Allow unused imports in __init__.py files
"__init__.py" = ["F401"]

[tool.ruff.lint.isort]
# Group imports: stdlib, third-party, local
known-first-party = ["config", "nodes", "workflow", "llm", "schemas"]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]

[tool.ruff.format]
# Use double quotes (observed in codebase)
quote-style = "double"
indent-style = "space"
line-ending = "auto"

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false  # Start lenient, can make stricter later
disallow_any_unimported = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
check_untyped_defs = true
strict_equality = true

# Allow gradual typing - don't fail on missing imports
ignore_missing_imports = true

# Show error codes
show_error_codes = true
show_column_numbers = true
show_error_context = true

[[tool.mypy.overrides]]
module = [
    "langchain.*",
    "langchain_openai.*",
    "langchain_anthropic.*",
    "langchain_google_genai.*",
    "langgraph.*",
]
ignore_missing_imports = true
